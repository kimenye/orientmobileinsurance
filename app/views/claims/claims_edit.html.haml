= render "layouts/claims_header"
- if @claim.nil?
  .row
    .large-10.large-centered.columns
      %h4
        No such claim was found
- else
  = form_for(@claim, :method => :put) do |f|
    .large-10.large-centered.columns
      .row
        .large-10.large-centered.columns
          = render "layouts/customer_details"
          = render "layouts/incident_details"

          %h5.section_header
            Dealer Details
          = f.hidden_field :step, :value => "3"
          = f.hidden_field :claim_type
          %p
            Dealer confirmed receipt of:
          .checks
            - if(@claim.is_theft?)
              .row.spacer
                .large-12.columns
                  = f.check_box :police_abstract
                  = f.label :police_abstract
            - else
              .row.spacer
                .large-12.columns
                  = f.check_box :damaged_device
                  = f.label :damaged_device
                  %span
                    (Device:
                    %b
                      = @claim.policy.insured_device.device.model
                    IMEI :
                    %b
                      = @claim.policy.insured_device.imei
                    )

            .row.spacer
              .large-12.columns
                = f.check_box :receipt
                = f.label :receipt, "Original purchase receipt/ warranty (must display device make, model & IMEI, seller and price & date of purchase)"
            .row.spacer
              .large-12.columns
                = f.check_box :original_id
                = f.label :original_id, "Original of ID/ Passport No. "
                %b
                  =@claim.policy.customer.id_passport
            .row.spacer
              .large-12.columns
                = f.check_box :copy_id
                = f.label :copy_id, "Copy of ID/ Passport No."
                %b
                  =@claim.policy.customer.id_passport
            - if(@claim.claim_type != "Damage")
              .row.spacer
                .large-12.columns
                  = f.check_box :blocking_request
                  = f.label :blocking_request, "Completed and stamped Blocking Request Form from mobile network operator"
            - else
              .row.spacer
                .large-12.columns
                  = f.label :dealer_description, "Please describe the damage to the device"
                  = f.text_field :dealer_description, :required => "required"
              .row.spacer
                .large-3.columns
                  = f.label :dealer_can_fix, "Can the device be repaired?"
                - if @claim.dealer_can_fix
                  .large-1.columns
                    %label
                      %b
                        Yes
                - else
                  .large-1.columns
                    %label
                      %b
                        No
                .large-8.columns
              .row.spacer
                .large-6.columns
                  = f.label :dealer_cost_estimate, "If yes, what is the estimated cost of repairs"
                  = f.text_field :dealer_cost_estimate
                .large-6.columns
                  = f.label :days_to_fix, "No of days to complete repairs"
                  = f.text_field :days_to_fix
          .row
            .large-12.columns
              %h5.section_header
                Authorize / Decline
          - if @claim.is_theft?
            .row.spacer
              .large-6.columns
                = f.check_box :authorized
                = f.label :authorized, "Authorise Replacement"
              .large-6.columns
                = f.label :replacement_limit
                = f.text_field :replacement_limit
          - else
            .row.spacer
              .large-6.columns
                = f.radio_button :authorization_type, "Replace"
                = f.label :authorization_type, "Authorize Replacement"
              - if @claim.dealer_can_fix
                .large-6.columns
                  = f.radio_button :authorization_type, "Repair"
                  = f.label :authorization_type, "Authorize Repairs"
            .row.spacer
              .large-6.columns
                = f.label :replacement_limit
                = f.text_field :replacement_limit
              - if @claim.dealer_can_fix
                .large-6.columns
                  = f.label :repair_limit
                  = f.text_field :repair_limit
          .row.spacer
            %hr
            .large-10.columns
              = f.label :decline_reason, "Reason for decline"
              = f.text_field :decline_reason
            .large-2.columns
              %label{:style => "display:block;" }
                &nbsp;
              = f.submit "Decline", {:class => "button small alert", :name => "commit"}
          .row.spacer
            .large-2.columns
              = f.submit "Approve", {:class=> "button small", :name => "commit"}
            .large-2.columns
              -#= f.submit "Decline", {:class => "button alert", :name => "commit"}
            .large-9.columns
:javascript
  $(function(){
    $('.checks input').prop('disabled', true);

    var decline = false;
    var repair_rules = {
      required : {
        depends : function()  {
           return $('input[name="claim[authorization_type]"]:checked').val() == "Repair" && !decline;
        }
      },
      number: true,
      max: #{if !@claim.repair_limit.nil? then @claim.repair_limit else 0 end}
    };

    var decline_rules = {
      required : {
        depends : function() {
          return decline;
        }
      }
    };

    var authorization_rules = {
      required : {
        depends : function() {
          return !decline;
        }
      }
    }

    var replace_rules = {
      required : {
        depends : function()  {
           return $('input[name="claim[authorization_type]"]:checked').val() == "Replace" && !decline;
        }
      },
      number: true,
      max: #{@claim.replacement_limit}
    };


    $(".edit_claim").bind("keypress", function(e) {
      if (e.keyCode == 13) {
       return false;
      }
    });

    $('.edit_claim').validate({
      rules : {
        "claim[authorization_type]" : authorization_rules,
        "claim[replacement_limit]" : replace_rules,
        "claim[repair_limit]" : repair_rules,
        "claim[authorized]" : authorization_rules,
        "claim[decline_reason]" : decline_rules
      },
      messages: {
        "claim[authorization_type]" : "What do you want to authorize?"
      }
    });

    $('input[value="Decline"]').click(function() {
        decline = true;
    });

    $('input[value="Approve"]').click(function() {
        decline = false;
    });

  });
